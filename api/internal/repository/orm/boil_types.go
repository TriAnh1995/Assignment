// Code generated by SQLBoiler 4.15.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package orm

import (
	"strconv"

	"github.com/friendsofgo/errors"
	"github.com/volatiletech/sqlboiler/v4/boil"
	"github.com/volatiletech/strmangle"
)

// M type is for providing columns and column values to UpdateAll.
type M map[string]interface{}

// ErrSyncFail occurs during insert when the record could not be retrieved in
// order to populate default value information. This usually happens when LastInsertId
// fails or there was a primary key configuration that was not resolvable.
var ErrSyncFail = errors.New("orm: failed to synchronize data after insert")

type insertCache struct {
	query        string
	retQuery     string
	valueMapping []uint64
	retMapping   []uint64
}

type updateCache struct {
	query        string
	valueMapping []uint64
}

func makeCacheKey(cols boil.Columns, nzDefaults []string) string {
	buf := strmangle.GetBuffer()

	buf.WriteString(strconv.Itoa(cols.Kind))
	for _, w := range cols.Cols {
		buf.WriteString(w)
	}

	if len(nzDefaults) != 0 {
		buf.WriteByte('.')
	}
	for _, nz := range nzDefaults {
		buf.WriteString(nz)
	}

	str := buf.String()
	strmangle.PutBuffer(buf)
	return str
}

// Enum values for SubscriptionType
const (
	SubscriptionTypeFollowed string = "followed"
	SubscriptionTypeBlocked  string = "blocked"
	SubscriptionTypeDefault  string = "default"
)

func AllSubscriptionType() []string {
	return []string{
		SubscriptionTypeFollowed,
		SubscriptionTypeBlocked,
		SubscriptionTypeDefault,
	}
}

// Enum values for FriendshipType
const (
	FriendshipTypeFriend   string = "friend"
	FriendshipTypeStranger string = "stranger"
)

func AllFriendshipType() []string {
	return []string{
		FriendshipTypeFriend,
		FriendshipTypeStranger,
	}
}

// Enum values for StatusType
const (
	StatusTypeFollowed string = "followed"
	StatusTypeBlocked  string = "blocked"
	StatusTypeDefault  string = "default"
)

func AllStatusType() []string {
	return []string{
		StatusTypeFollowed,
		StatusTypeBlocked,
		StatusTypeDefault,
	}
}

// Enum values for UpdateType
const (
	UpdateTypeUpdated string = "updated"
	UpdateTypeDefault string = "default"
)

func AllUpdateType() []string {
	return []string{
		UpdateTypeUpdated,
		UpdateTypeDefault,
	}
}
